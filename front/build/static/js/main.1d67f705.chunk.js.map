{"version":3,"sources":["components/BarChart/barChartComponents.js","components/BarChart/BarChart.js","Graphic/grahpicComponents.js","constans/api.js","store/visualGraph.js","Graphic/Graphic.js","App.js","index.js"],"names":["Wrapper","styled","div","Svg","svg","AxisY","g","BarChart","graphData","width","height","useState","activeIndex","setActiveIndex","getX","d3","domain","map","item","x","range","getY","linePath","d","bandwidth","y","value","curve","areaPath","y0","y1","onMouseMove","e","nativeEvent","offsetX","index","Math","floor","step","onMouseLeave","ref","yAxis","tickSize","tickPadding","call","xAxis","transform","style","transition","fill","opacity","strokeWidth","stroke","cx","cy","r","dx","textAnchor","memo","Input","input","attrs","props","type","id","name","Box","axios","create","baseURL","data","version","isLoad","isError","makeAutoObservable","this","request","get","response","runInAction","observer","visualGraph","useEffect","fetchGraph","handleChangeVesrion","target","changeDataVersion","useMemo","onChange","checked","App","className","ReactDOM","render","document","getElementById"],"mappings":"+iBAEO,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAMF,IAAOG,IAAV,KAIHC,EAAQJ,IAAOK,EAAV,KCRZC,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAAa,EACXC,mBAAS,MADE,mBAC1CC,EAD0C,KAC7BC,EAD6B,KAG3CC,EAAOC,MAEVC,OAAOR,EAAUS,KAAI,SAACC,GAAD,OAAUA,EAAKC,MACpCC,MAAM,CAAC,EAAGX,IAEPY,EAAON,MAAiBC,OAAO,CAAC,EAAGP,IAAQW,MAAM,CAACV,EAAQ,IAY1DY,EAAWP,MAEdI,GAAE,SAACI,GAAD,OAAOT,EAAKS,EAAEJ,GAAKL,EAAKU,YAAc,KACxCC,GAAE,SAACF,GAAD,OAAOF,EAAKE,EAAEG,UAChBC,MAAMZ,IAJQA,CAIWP,GAEtBoB,EAAWb,MAEdI,GAAE,SAACI,GAAD,OAAOT,EAAKS,EAAEJ,GAAKL,EAAKU,YAAc,KACxCK,IAAG,SAACN,GAAD,OAAOF,EAAKE,EAAEG,UACjBI,IAAG,kBAAMT,EAAK,MACdM,MAAMZ,IALQA,CAKWP,GAY5B,OACE,cAACR,EAAD,UACE,eAACG,EAAD,CACEM,MAAOA,EACPC,OAAQA,EACRqB,YAfkB,SAACC,GACvB,IAAMb,EAAIa,EAAEC,YAAYC,QAClBC,EAAQC,KAAKC,MAAMlB,EAAIL,EAAKwB,QAClCzB,EAAesB,IAaXI,aAVmB,WACvB1B,EAAe,OAKb,UAME,cAACR,EAAD,CAAOmC,IAzCI,SAACA,GAChB,IAAMC,EAAQ1B,IAAYM,GAAMqB,UAAUjC,GAAOkC,YAAY,GAC7D5B,IAAUyB,GAAKI,KAAKH,MAwChB,mBACED,IAtCS,SAACA,GAChB,IAAMK,EAAQ9B,IAAcD,GAC5BC,IAAUyB,GAAKI,KAAKC,IAqCdC,UAAS,sBAAiBzB,EAAK,GAAtB,KACT0B,MAAO,CAAEC,WAAY,QAEvB,sBACEC,KAAK,UACL1B,EAAGK,EACHsB,QAAS,GACTH,MAAO,CAAEC,WAAY,QAEvB,sBACEG,YAAa,EACbF,KAAK,OACLG,OAAO,UACP7B,EAAGD,EACHyB,MAAO,CAAEC,WAAY,QAEtBxC,EAAUS,KAAI,SAACC,EAAMiB,GAAW,IAAD,EAC9B,OACE,8BACE,2BACEkB,GAAIvC,EAAKI,EAAKC,GAAKL,EAAKU,YAAc,EACtC8B,GAAIjC,EAAKH,EAAKQ,OACd6B,EAAGpB,IAAUvB,EAAc,EAAI,EAC/BqC,KAAK,UACLG,OAAQjB,IAAUvB,EAAc,EAAI,GALtC,uBAMS,QANT,sBAOS,CAAEoC,WAAY,WAPvB,IASA,sBACEC,KAAK,UACL9B,EAAGL,EAAKI,EAAKC,GAAKL,EAAKU,YAAc,EACrCC,GAAI,GACJ+B,GAAI,EACJC,WAAW,SACXV,MAAO,CAAEC,WAAY,UANvB,SAQG9B,EAAKQ,UAlBFS,YA4BLuB,iBAAKnD,G,iNCvGb,IAAMoD,EAAQ1D,IAAO2D,MAAMC,OAAM,SAACC,GAAD,MAAY,CAClDC,KAAMD,EAAMC,KACZC,GAAIF,EAAME,GACVC,KAAMH,EAAMG,QAHOhE,CAAH,KAMLiE,EAAMjE,IAAOC,IAAV,K,uDCNDiE,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,+BCiCI,M,WA1Bb,aAAe,yBALfC,KAAO,GAKO,KAJdC,QAAU,KAII,KAHdC,QAAS,EAGK,KAFdC,SAAU,EAGRC,YAAmBC,M,8DAGHJ,GAChBI,KAAKJ,QAAUA,I,mLAKUK,EAAQC,IAAI,I,OAA7BC,E,OACNC,aAAY,WACV,EAAKT,KAAL,OAAYQ,QAAZ,IAAYA,OAAZ,EAAYA,EAAUR,Q,gDAGxBS,aAAY,WACV,EAAKN,SAAU,K,yBAGjBM,aAAY,WACV,EAAKP,QAAS,K,0ICyBPd,iBAAKsB,aAhDJ,WAAO,IACbV,EAAmCW,EAAnCX,KAAMC,EAA6BU,EAA7BV,QAASC,EAAoBS,EAApBT,OAAQC,EAAYQ,EAAZR,QAE/BS,qBAAU,WACRD,EAAYE,eACX,IAEH,IAAMC,EAAsB,SAAC,GAA2B,IAAf1D,EAAc,EAAxB2D,OAAU3D,MACvCuD,EAAYK,kBAAkB5D,IAG1BlB,EAAY+E,mBAAQ,kBAAMjB,EAAKC,KAAU,CAACD,EAAMC,IAEtD,OACE,eAACL,EAAD,WACE,wCACA,gCACE,kCACE,cAACP,EAAD,CACEI,KAAK,QACLrC,MAAM,KACNuC,KAAK,UACLuB,SAAUJ,EACVK,QAAqB,OAAZlB,IANb,QAUA,kCACE,cAACZ,EAAD,CACEI,KAAK,QACLrC,MAAM,KACNuC,KAAK,UACLuB,SAAUJ,EACVK,QAAqB,OAAZlB,IANb,WAWDC,IACEC,EACC,+EAEA,cAAC,EAAD,CAAUhE,MAAO,IAAKC,OAAQ,IAAKF,UAAWA,YCvCzCkF,EANH,kBACV,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCDJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d67f705.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  font-size: 14px;\n  font-family: Helvetica;\n  color: #666;\n  padding: 50px;\n`;\n\nexport const Svg = styled.svg`\n  overflow: visible;\n`;\n\nexport const AxisY = styled.g`\n  color: #ccd6eb;\n\n  & text {\n    color: #666;\n  }\n`;\n","import React, { useState, memo } from 'react';\nimport * as d3 from 'd3';\n\nimport { Svg, Wrapper, AxisY } from './barChartComponents';\n\nconst BarChart = ({ graphData, width, height }) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const getX = d3\n    .scaleBand()\n    .domain(graphData.map((item) => item.x))\n    .range([0, width]);\n\n  const getY = d3.scaleLinear().domain([0, width]).range([height, 0]);\n\n  const getYAxis = (ref) => {\n    const yAxis = d3.axisLeft(getY).tickSize(-width).tickPadding(7);\n    d3.select(ref).call(yAxis);\n  };\n\n  const getXAxis = (ref) => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis);\n  };\n\n  const linePath = d3\n    .line()\n    .x((d) => getX(d.x) + getX.bandwidth() / 2)\n    .y((d) => getY(d.value))\n    .curve(d3.curveMonotoneX)(graphData);\n\n  const areaPath = d3\n    .area()\n    .x((d) => getX(d.x) + getX.bandwidth() / 2)\n    .y0((d) => getY(d.value))\n    .y1(() => getY(0))\n    .curve(d3.curveMonotoneX)(graphData);\n\n  const handleMouseMove = (e) => {\n    const x = e.nativeEvent.offsetX;\n    const index = Math.floor(x / getX.step());\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  return (\n    <Wrapper>\n      <Svg\n        width={width}\n        height={height}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        <AxisY ref={getYAxis} />\n        <g\n          ref={getXAxis}\n          transform={`translate(0,${getY(0)})`}\n          style={{ transition: '1s' }}\n        />\n        <path\n          fill=\"#7cb5ec\"\n          d={areaPath}\n          opacity={0.2}\n          style={{ transition: '1s' }}\n        />\n        <path\n          strokeWidth={3}\n          fill=\"none\"\n          stroke=\"#7cb5ec\"\n          d={linePath}\n          style={{ transition: '1s' }}\n        />\n        {graphData.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.x) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                stroke={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: 'all 1s' }}\n              />\n              <text\n                fill=\"#7cb5ec\"\n                x={getX(item.x) + getX.bandwidth() / 2}\n                y={-20}\n                dx={1}\n                textAnchor=\"middle\"\n                style={{ transition: 'all 1s' }}\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n      </Svg>\n    </Wrapper>\n  );\n};\n\nexport default memo(BarChart);\n","import styled from 'styled-components';\n\nexport const Input = styled.input.attrs((props) => ({\n  type: props.type,\n  id: props.id,\n  name: props.name,\n}))``;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://localhost:8080/data',\n});\n","import { runInAction, makeAutoObservable } from 'mobx';\n\nimport request from '../constans/api';\n\nclass VisualGraph {\n  data = {};\n  version = 'v1';\n  isLoad = false;\n  isError = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  changeDataVersion(version) {\n    this.version = version;\n  }\n\n  async fetchGraph() {\n    try {\n      const response = await request.get('');\n      runInAction(() => {\n        this.data = response?.data;\n      });\n    } catch (e) {\n      runInAction(() => {\n        this.isError = true;\n      });\n    } finally {\n      runInAction(() => {\n        this.isLoad = true;\n      });\n    }\n  }\n}\n\nexport default new VisualGraph();\n","import React, { useEffect, useMemo, memo } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport BarChart from '../components/BarChart';\nimport { Input, Box } from './grahpicComponents';\nimport visualGraph from '../store/visualGraph';\n\nconst Graphic = () => {\n  const { data, version, isLoad, isError } = visualGraph;\n\n  useEffect(() => {\n    visualGraph.fetchGraph();\n  }, []);\n\n  const handleChangeVesrion = ({ target: { value } }) => {\n    visualGraph.changeDataVersion(value);\n  };\n\n  const graphData = useMemo(() => data[version], [data, version]);\n\n  return (\n    <Box>\n      <h2>Graphs</h2>\n      <div>\n        <label>\n          <Input\n            type=\"radio\"\n            value=\"v1\"\n            name=\"version\"\n            onChange={handleChangeVesrion}\n            checked={version === 'v1'}\n          />\n          v1\n        </label>\n        <label>\n          <Input\n            type=\"radio\"\n            value=\"v2\"\n            name=\"version\"\n            onChange={handleChangeVesrion}\n            checked={version === 'v2'}\n          />\n          v2\n        </label>\n      </div>\n      {isLoad &&\n        (isError ? (\n          <div>something went wrong, please reload the page</div>\n        ) : (\n          <BarChart width={800} height={400} graphData={graphData} />\n        ))}\n    </Box>\n  );\n};\n\nexport default memo(observer(Graphic));\n","import React from 'react';\n\nimport Graphic from './Graphic';\n\nconst App = () => (\n  <div className=\"App\">\n    <Graphic />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}